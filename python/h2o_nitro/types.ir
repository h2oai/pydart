# bin/cache/pkg/sky_engine/lib/core/object.dart
class Object:
	default:

# packages/flutter/lib/src/foundation/diagnostics.dart
abstract class DiagnosticableTree extends Object:
	default:

# packages/flutter/lib/src/foundation/key.dart
abstract class Key extends Object:
	default:
		value: String
	empty:

# packages/flutter/lib/src/widgets/framework.dart
abstract class Widget extends DiagnosticableTree:
	default:
		key: Key?

# packages/flutter/lib/src/widgets/framework.dart
abstract class StatefulWidget extends Widget:
	default:
		key: Key?

# packages/flutter/lib/src/widgets/framework.dart
abstract class State<T extends StatefulWidget> extends Object:
	default:

# packages/flutter/lib/src/widgets/framework.dart
abstract class GlobalKey<T extends State<StatefulWidget>> extends Key:
	default:
		debugLabel: String?
	constructor:

# bin/cache/pkg/sky_engine/lib/core/iterable.dart
abstract class Iterable<E> extends Object:
	default:
	generate:
		count: int
		generator: E Function(int)?
	empty:

# bin/cache/pkg/sky_engine/lib/internal/iterable.dart
abstract class EfficientLengthIterable<T> extends Iterable<T>:
	default:

# bin/cache/pkg/sky_engine/lib/core/list.dart
abstract class List<E> extends Object implements EfficientLengthIterable<E>:
	default:
		length: int?
	filled:
		length: int
		fill: E
		growable: bool = false
	empty:
		growable: bool = false
	from:
		elements: Iterable<dynamic>
		growable: bool = true
	of:
		elements: Iterable<E>
		growable: bool = true
	generate:
		length: int
		generator: E Function(int)
		growable: bool = true
	unmodifiable:
		elements: Iterable<dynamic>

# packages/flutter/lib/src/widgets/navigator.dart
class RouteSettings extends Object:
	default:
		name: String?
		arguments: Object?

# packages/flutter/lib/src/foundation/key.dart
abstract class LocalKey extends Key:
	default:

# packages/flutter/lib/src/widgets/navigator.dart
abstract class Page<T> extends RouteSettings:
	default:
		key: LocalKey?
		name: String?
		arguments: Object?
		restorationId: String?

# packages/flutter/lib/src/widgets/navigator.dart
abstract class Route<T> extends Object:
	default:
		settings: RouteSettings?

# packages/flutter/lib/src/widgets/navigator.dart
abstract class TransitionDelegate<T> extends Object:
	default:

# packages/flutter/lib/src/widgets/navigator.dart
class NavigatorObserver extends Object:
	default:

# packages/flutter/lib/src/widgets/navigator.dart
class Navigator extends StatefulWidget:
	static:
		defaultRouteName: String = '/'
	default:
		key: Key?
		pages: List<Page<dynamic>> = <Page<dynamic>>[]
		onPopPage: bool Function(Route<dynamic>, dynamic)?
		initialRoute: String?
		onGenerateInitialRoutes: List<Route<dynamic>> Function(NavigatorState, String) = Navigator.defaultGenerateInitialRoutes
		onGenerateRoute: Route<dynamic>? Function(RouteSettings)?
		onUnknownRoute: Route<dynamic>? Function(RouteSettings)?
		transitionDelegate: TransitionDelegate<dynamic>
		reportsRouteUpdateToEngine: bool = false
		observers: List<NavigatorObserver> = <NavigatorObserver>[]
		restorationScopeId: String?

# packages/flutter/lib/src/widgets/navigator.dart
class NavigatorState extends State<Navigator>:
	default:

# packages/flutter/lib/src/material/scaffold.dart
class ScaffoldMessenger extends StatefulWidget:
	default:
		key: Key?
		child: Widget

# packages/flutter/lib/src/material/scaffold.dart
class ScaffoldMessengerState extends State<ScaffoldMessenger>:
	default:

# bin/cache/pkg/sky_engine/lib/core/map.dart
class MapEntry<K, V> extends Object:
	default:
		key: K
		value: V

# bin/cache/pkg/sky_engine/lib/core/map.dart
abstract class Map<K, V> extends Object:
	default:
	from:
		other: Map<dynamic, dynamic>
	of:
		other: Map<K, V>
	unmodifiable:
		other: Map<dynamic, dynamic>
	identity:
	fromIterable:
		iterable: Iterable<dynamic>
		key: K Function(dynamic)?
		value: V Function(dynamic)?
	fromIterables:
		keys: Iterable<K>
		values: Iterable<V>
	fromEntries:
		entries: Iterable<MapEntry<K, V>>

# packages/flutter/lib/src/widgets/framework.dart
abstract class BuildContext extends Object:
	default:

# bin/cache/pkg/sky_engine/lib/ui/painting.dart
class Color extends Object:
	default:
		value: int
	fromARGB:
		a: int
		r: int
		g: int
		b: int
	fromRGBO:
		r: int
		g: int
		b: int
		opacity: double

# bin/cache/pkg/sky_engine/lib/ui/window.dart
enum Brightness:
	dark
	light

# packages/flutter/lib/src/material/theme_data.dart
class VisualDensity extends Object:
	static:
		minimumDensity: double = -4.0
		maximumDensity: double = 4.0
		standard: VisualDensity
		comfortable: VisualDensity
		compact: VisualDensity
	default:
		horizontal: double = 0.0
		vertical: double = 0.0

# packages/flutter/lib/src/painting/colors.dart
class ColorSwatch<T> extends Color:
	default:
		primary: int
		_swatch: Map<T, Color>

# packages/flutter/lib/src/material/colors.dart
class MaterialColor extends ColorSwatch<int>:
	default:
		primary: int
		swatch: Map<int, Color>

# packages/flutter/lib/src/material/ink_well.dart
abstract class InteractiveInkFeatureFactory extends Object:
	default:

# packages/flutter/lib/src/material/button_theme.dart
enum ButtonTextTheme:
	normal
	accent
	primary

# packages/flutter/lib/src/painting/edge_insets.dart
abstract class EdgeInsetsGeometry extends Object:
	static:
		infinity: EdgeInsetsGeometry
	default:

# packages/flutter/lib/src/painting/borders.dart
abstract class ShapeBorder extends Object:
	default:

# packages/flutter/lib/src/material/button_theme.dart
enum ButtonBarLayoutBehavior:
	constrained
	padded

# packages/flutter/lib/src/material/color_scheme.dart
class ColorScheme extends Object:
	default:
		primary: Color
		primaryVariant: Color
		secondary: Color
		secondaryVariant: Color
		surface: Color
		background: Color
		error: Color
		onPrimary: Color
		onSecondary: Color
		onSurface: Color
		onBackground: Color
		onError: Color
		brightness: Brightness
	light:
		primary: Color
		primaryVariant: Color
		secondary: Color
		secondaryVariant: Color
		surface: Color
		background: Color
		error: Color
		onPrimary: Color
		onSecondary: Color
		onSurface: Color
		onBackground: Color
		onError: Color
		brightness: Brightness
	dark:
		primary: Color
		primaryVariant: Color
		secondary: Color
		secondaryVariant: Color
		surface: Color
		background: Color
		error: Color
		onPrimary: Color
		onSecondary: Color
		onSurface: Color
		onBackground: Color
		onError: Color
		brightness: Brightness
	highContrastLight:
		primary: Color
		primaryVariant: Color
		secondary: Color
		secondaryVariant: Color
		surface: Color
		background: Color
		error: Color
		onPrimary: Color
		onSecondary: Color
		onSurface: Color
		onBackground: Color
		onError: Color
		brightness: Brightness
	highContrastDark:
		primary: Color
		primaryVariant: Color
		secondary: Color
		secondaryVariant: Color
		surface: Color
		background: Color
		error: Color
		onPrimary: Color
		onSecondary: Color
		onSurface: Color
		onBackground: Color
		onError: Color
		brightness: Brightness
	fromSwatch:
		primarySwatch: MaterialColor
		primaryColorDark: Color?
		accentColor: Color?
		cardColor: Color?
		backgroundColor: Color?
		errorColor: Color?
		brightness: Brightness

# packages/flutter/lib/src/material/theme_data.dart
enum MaterialTapTargetSize:
	padded
	shrinkWrap

# packages/flutter/lib/src/material/button_theme.dart
class ButtonThemeData extends Object:
	default:
		textTheme: ButtonTextTheme
		minWidth: double = 88.0
		height: double = 36.0
		padding: EdgeInsetsGeometry?
		shape: ShapeBorder?
		layoutBehavior: ButtonBarLayoutBehavior
		alignedDropdown: bool = false
		buttonColor: Color?
		disabledColor: Color?
		focusColor: Color?
		hoverColor: Color?
		highlightColor: Color?
		splashColor: Color?
		colorScheme: ColorScheme?
		materialTapTargetSize: MaterialTapTargetSize?

# bin/cache/pkg/sky_engine/lib/ui/text.dart
class FontWeight extends Object:
	static:
		w100: FontWeight
		w200: FontWeight
		w300: FontWeight
		w400: FontWeight
		w500: FontWeight
		w600: FontWeight
		w700: FontWeight
		w800: FontWeight
		w900: FontWeight
		normal: FontWeight
		bold: FontWeight

# bin/cache/pkg/sky_engine/lib/ui/text.dart
enum FontStyle:
	normal
	italic

# bin/cache/pkg/sky_engine/lib/ui/text.dart
enum TextBaseline:
	alphabetic
	ideographic

# bin/cache/pkg/sky_engine/lib/ui/text.dart
enum TextLeadingDistribution:
	proportional
	even

# bin/cache/pkg/sky_engine/lib/ui/platform_dispatcher.dart
class Locale extends Object:
	default:
		_languageCode: String
		_countryCode: String?
	fromSubtags:
		languageCode: String = 'und'
		scriptCode: String?
		countryCode: String?

# bin/cache/pkg/sky_engine/lib/ui/painting.dart
class Paint extends Object:
	default:

# bin/cache/pkg/sky_engine/lib/ui/geometry.dart
abstract class OffsetBase extends Object:
	default:
		_dx: double
		_dy: double

# bin/cache/pkg/sky_engine/lib/ui/geometry.dart
class Offset extends OffsetBase:
	static:
		zero: Offset
		infinite: Offset
	default:
		dx: double
		dy: double
	fromDirection:
		direction: double
		distance: double = 1.0

# bin/cache/pkg/sky_engine/lib/ui/painting.dart
class Shadow extends Object:
	default:
		color: Color
		offset: Offset
		blurRadius: double = 0.0

# bin/cache/pkg/sky_engine/lib/ui/text.dart
class FontFeature extends Object:
	default:
		feature: String
		value: int = 1
	enable:
		feature: String
	disable:
		feature: String
	alternative:
		value: int
	alternativeFractions:
	contextualAlternates:
	caseSensitiveForms:
	characterVariant:
		value: int
	denominator:
	fractions:
	historicalForms:
	historicalLigatures:
	liningFigures:
	localeAware:
		enable: bool = true
	notationalForms:
		value: int = 1
	numerators:
	oldstyleFigures:
	ordinalForms:
	proportionalFigures:
	randomize:
	stylisticAlternates:
	scientificInferiors:
	stylisticSet:
		value: int
	subscripts:
	superscripts:
	swash:
		value: int = 1
	tabularFigures:
	slashedZero:

# bin/cache/pkg/sky_engine/lib/ui/text.dart
class TextDecoration extends Object:
	static:
		none: TextDecoration
		underline: TextDecoration
		overline: TextDecoration
		lineThrough: TextDecoration
	combine:
		decorations: List<TextDecoration>

# bin/cache/pkg/sky_engine/lib/ui/text.dart
enum TextDecorationStyle:
	solid
	double
	dotted
	dashed
	wavy

# packages/flutter/lib/src/painting/text_painter.dart
enum TextOverflow:
	clip
	fade
	ellipsis
	visible

# packages/flutter/lib/src/painting/text_style.dart
class TextStyle extends Object:
	default:
		inherit: bool = true
		color: Color?
		backgroundColor: Color?
		fontSize: double?
		fontWeight: FontWeight?
		fontStyle: FontStyle?
		letterSpacing: double?
		wordSpacing: double?
		textBaseline: TextBaseline?
		height: double?
		leadingDistribution: TextLeadingDistribution?
		locale: Locale?
		foreground: Paint?
		background: Paint?
		shadows: List<Shadow>?
		fontFeatures: List<FontFeature>?
		decoration: TextDecoration?
		decorationColor: Color?
		decorationStyle: TextDecorationStyle?
		decorationThickness: double?
		debugLabel: String?
		fontFamily: String?
		fontFamilyFallback: List<String>?
		package: String?
		overflow: TextOverflow?

# packages/flutter/lib/src/rendering/object.dart
abstract class Constraints extends Object:
	default:

# bin/cache/pkg/sky_engine/lib/ui/geometry.dart
class Size extends OffsetBase:
	static:
		zero: Size
		infinite: Size
	default:
		width: double
		height: double
	copy:
		source: Size
	square:
		dimension: double
	fromWidth:
		width: double
	fromHeight:
		height: double
	fromRadius:
		radius: double

# packages/flutter/lib/src/rendering/box.dart
class BoxConstraints extends Constraints:
	default:
		minWidth: double = 0.0
		maxWidth: double = double.infinity
		minHeight: double = 0.0
		maxHeight: double = double.infinity
	tight:
		size: Size
	tightFor:
		width: double?
		height: double?
	tightForFinite:
		width: double = double.infinity
		height: double = double.infinity
	loose:
		size: Size
	expand:
		width: double?
		height: double?

# packages/flutter/lib/src/painting/border_radius.dart
abstract class BorderRadiusGeometry extends Object:
	default:

# bin/cache/pkg/sky_engine/lib/ui/geometry.dart
class Radius extends Object:
	static:
		zero: Radius
	circular:
		radius: double
	elliptical:
		x: double
		y: double

# packages/flutter/lib/src/painting/border_radius.dart
class BorderRadius extends BorderRadiusGeometry:
	static:
		zero: BorderRadius
	all:
		radius: Radius
	circular:
		radius: double
	vertical:
		top: Radius
		bottom: Radius
	horizontal:
		left: Radius
		right: Radius
	only:
		topLeft: Radius
		topRight: Radius
		bottomLeft: Radius
		bottomRight: Radius

# packages/flutter/lib/src/material/toggle_buttons_theme.dart
class ToggleButtonsThemeData extends Object:
	default:
		textStyle: TextStyle?
		constraints: BoxConstraints?
		color: Color?
		selectedColor: Color?
		disabledColor: Color?
		fillColor: Color?
		focusColor: Color?
		highlightColor: Color?
		hoverColor: Color?
		splashColor: Color?
		borderColor: Color?
		selectedBorderColor: Color?
		disabledBorderColor: Color?
		borderRadius: BorderRadius?
		borderWidth: double?

# packages/flutter/lib/src/material/text_theme.dart
class TextTheme extends Object:
	default:
		headline1: TextStyle?
		headline2: TextStyle?
		headline3: TextStyle?
		headline4: TextStyle?
		headline5: TextStyle?
		headline6: TextStyle?
		subtitle1: TextStyle?
		subtitle2: TextStyle?
		bodyText1: TextStyle?
		bodyText2: TextStyle?
		caption: TextStyle?
		button: TextStyle?
		overline: TextStyle?

# packages/flutter/lib/src/material/input_decorator.dart
enum FloatingLabelBehavior:
	never
	auto
	always

# packages/flutter/lib/src/painting/borders.dart
enum BorderStyle:
	none
	solid

# packages/flutter/lib/src/painting/borders.dart
class BorderSide extends Object:
	static:
		none: BorderSide
	default:
		color: Color
		width: double = 1.0
		style: BorderStyle

# packages/flutter/lib/src/material/input_border.dart
abstract class InputBorder extends ShapeBorder:
	static:
		none: InputBorder
	default:
		borderSide: BorderSide

# packages/flutter/lib/src/material/input_decorator.dart
class InputDecorationTheme extends Object:
	default:
		labelStyle: TextStyle?
		floatingLabelStyle: TextStyle?
		helperStyle: TextStyle?
		helperMaxLines: int?
		hintStyle: TextStyle?
		errorStyle: TextStyle?
		errorMaxLines: int?
		floatingLabelBehavior: FloatingLabelBehavior
		isDense: bool = false
		contentPadding: EdgeInsetsGeometry?
		isCollapsed: bool = false
		prefixStyle: TextStyle?
		suffixStyle: TextStyle?
		counterStyle: TextStyle?
		filled: bool = false
		fillColor: Color?
		focusColor: Color?
		hoverColor: Color?
		errorBorder: InputBorder?
		focusedBorder: InputBorder?
		focusedErrorBorder: InputBorder?
		disabledBorder: InputBorder?
		enabledBorder: InputBorder?
		border: InputBorder?
		alignLabelWithHint: bool = false
		constraints: BoxConstraints?

# packages/flutter/lib/src/widgets/icon_theme_data.dart
class IconThemeData extends Object:
	default:
		color: Color?
		opacity: double?
		size: double?
	fallback:

# packages/flutter/lib/src/material/slider_theme.dart
abstract class SliderComponentShape extends Object:
	default:

# packages/flutter/lib/src/material/slider_theme.dart
abstract class SliderTickMarkShape extends Object:
	default:

# packages/flutter/lib/src/material/slider_theme.dart
abstract class SliderTrackShape extends Object:
	default:

# packages/flutter/lib/src/material/slider_theme.dart
abstract class RangeSliderTickMarkShape extends Object:
	default:

# packages/flutter/lib/src/material/slider_theme.dart
abstract class RangeSliderThumbShape extends Object:
	default:

# packages/flutter/lib/src/material/slider_theme.dart
abstract class RangeSliderTrackShape extends Object:
	default:

# packages/flutter/lib/src/material/slider_theme.dart
abstract class RangeSliderValueIndicatorShape extends Object:
	default:

# packages/flutter/lib/src/material/slider_theme.dart
enum ShowValueIndicator:
	onlyForDiscrete
	onlyForContinuous
	always
	never

# bin/cache/pkg/sky_engine/lib/ui/text.dart
enum TextDirection:
	rtl
	ltr

# packages/flutter/lib/src/material/slider_theme.dart
class RangeValues extends Object:
	default:
		start: double
		end: double

# packages/flutter/lib/src/material/slider_theme.dart
enum Thumb:
	start
	end

# packages/flutter/lib/src/material/slider_theme.dart
class SliderThemeData extends Object:
	default:
		trackHeight: double?
		activeTrackColor: Color?
		inactiveTrackColor: Color?
		disabledActiveTrackColor: Color?
		disabledInactiveTrackColor: Color?
		activeTickMarkColor: Color?
		inactiveTickMarkColor: Color?
		disabledActiveTickMarkColor: Color?
		disabledInactiveTickMarkColor: Color?
		thumbColor: Color?
		overlappingShapeStrokeColor: Color?
		disabledThumbColor: Color?
		overlayColor: Color?
		valueIndicatorColor: Color?
		overlayShape: SliderComponentShape?
		tickMarkShape: SliderTickMarkShape?
		thumbShape: SliderComponentShape?
		trackShape: SliderTrackShape?
		valueIndicatorShape: SliderComponentShape?
		rangeTickMarkShape: RangeSliderTickMarkShape?
		rangeThumbShape: RangeSliderThumbShape?
		rangeTrackShape: RangeSliderTrackShape?
		rangeValueIndicatorShape: RangeSliderValueIndicatorShape?
		showValueIndicator: ShowValueIndicator?
		valueIndicatorTextStyle: TextStyle?
		minThumbSeparation: double?
		thumbSelector: Thumb? Function(TextDirection, RangeValues, double, Size, Size, double)?
	fromPrimaryColors:
		primaryColor: Color
		primaryColorDark: Color
		primaryColorLight: Color
		valueIndicatorTextStyle: TextStyle

# packages/flutter/lib/src/painting/decoration.dart
abstract class Decoration extends Object:
	default:

# packages/flutter/lib/src/material/tabs.dart
enum TabBarIndicatorSize:
	tab
	label

# packages/flutter/lib/src/material/tab_bar_theme.dart
class TabBarTheme extends Object:
	default:
		indicator: Decoration?
		indicatorSize: TabBarIndicatorSize?
		labelColor: Color?
		labelPadding: EdgeInsetsGeometry?
		labelStyle: TextStyle?
		unselectedLabelColor: Color?
		unselectedLabelStyle: TextStyle?

# bin/cache/pkg/sky_engine/lib/core/comparable.dart
abstract class Comparable<T> extends Object:
	default:

# bin/cache/pkg/sky_engine/lib/core/duration.dart
class Duration extends Object implements Comparable<Duration>:
	static:
		microsecondsPerMillisecond: int = 1000
		millisecondsPerSecond: int = 1000
		secondsPerMinute: int = 60
		minutesPerHour: int = 60
		hoursPerDay: int = 24
		microsecondsPerSecond: int = 1000000
		microsecondsPerMinute: int = 60000000
		microsecondsPerHour: int = 3600000000
		microsecondsPerDay: int = 86400000000
		millisecondsPerMinute: int = 60000
		millisecondsPerHour: int = 3600000
		millisecondsPerDay: int = 86400000
		secondsPerHour: int = 3600
		secondsPerDay: int = 86400
		minutesPerDay: int = 1440
		zero: Duration
	default:
		days: int = 0
		hours: int = 0
		minutes: int = 0
		seconds: int = 0
		milliseconds: int = 0
		microseconds: int = 0

# packages/flutter/lib/src/material/tooltip_theme.dart
enum TooltipTriggerMode:
	manual
	longPress
	tap

# packages/flutter/lib/src/material/tooltip_theme.dart
class TooltipThemeData extends Object:
	default:
		height: double?
		padding: EdgeInsetsGeometry?
		margin: EdgeInsetsGeometry?
		verticalOffset: double?
		preferBelow: bool?
		excludeFromSemantics: bool?
		decoration: Decoration?
		textStyle: TextStyle?
		waitDuration: Duration?
		showDuration: Duration?
		triggerMode: TooltipTriggerMode?
		enableFeedback: bool?

# bin/cache/pkg/sky_engine/lib/ui/painting.dart
enum Clip:
	none
	hardEdge
	antiAlias
	antiAliasWithSaveLayer

# packages/flutter/lib/src/material/card_theme.dart
class CardTheme extends Object:
	default:
		clipBehavior: Clip?
		color: Color?
		shadowColor: Color?
		elevation: double?
		margin: EdgeInsetsGeometry?
		shape: ShapeBorder?

# packages/flutter/lib/src/painting/borders.dart
abstract class OutlinedBorder extends ShapeBorder:
	default:
		side: BorderSide

# packages/flutter/lib/src/material/chip_theme.dart
class ChipThemeData extends Object:
	default:
		backgroundColor: Color
		deleteIconColor: Color?
		disabledColor: Color
		selectedColor: Color
		secondarySelectedColor: Color
		shadowColor: Color?
		selectedShadowColor: Color?
		showCheckmark: bool?
		checkmarkColor: Color?
		labelPadding: EdgeInsetsGeometry?
		padding: EdgeInsetsGeometry
		side: BorderSide?
		shape: OutlinedBorder?
		labelStyle: TextStyle
		secondaryLabelStyle: TextStyle
		brightness: Brightness
		elevation: double?
		pressElevation: double?
	fromDefaults:
		brightness: Brightness?
		primaryColor: Color?
		secondaryColor: Color
		labelStyle: TextStyle

# packages/flutter/lib/src/foundation/platform.dart
enum TargetPlatform:
	android
	fuchsia
	iOS
	linux
	macOS
	windows

# packages/flutter/lib/src/material/page_transitions_theme.dart
abstract class PageTransitionsBuilder extends Object:
	default:

# packages/flutter/lib/src/material/page_transitions_theme.dart
class PageTransitionsTheme extends Object:
	default:
		builders: Map<TargetPlatform, PageTransitionsBuilder>

# packages/flutter/lib/src/services/system_chrome.dart
class SystemUiOverlayStyle extends Object:
	static:
		light: SystemUiOverlayStyle
		dark: SystemUiOverlayStyle
	default:
		systemNavigationBarColor: Color?
		systemNavigationBarDividerColor: Color?
		systemNavigationBarIconBrightness: Brightness?
		systemNavigationBarContrastEnforced: bool?
		statusBarColor: Color?
		statusBarBrightness: Brightness?
		statusBarIconBrightness: Brightness?
		systemStatusBarContrastEnforced: bool?

# packages/flutter/lib/src/material/app_bar_theme.dart
class AppBarTheme extends Object:
	default:
		brightness: Brightness?
		color: Color?
		backgroundColor: Color?
		foregroundColor: Color?
		elevation: double?
		shadowColor: Color?
		shape: ShapeBorder?
		iconTheme: IconThemeData?
		actionsIconTheme: IconThemeData?
		textTheme: TextTheme?
		centerTitle: bool?
		titleSpacing: double?
		toolbarHeight: double?
		toolbarTextStyle: TextStyle?
		titleTextStyle: TextStyle?
		systemOverlayStyle: SystemUiOverlayStyle?
		backwardsCompatibility: bool?

# packages/flutter/lib/src/material/material_state.dart
abstract class MaterialStateProperty<T> extends Object:
	default:

# packages/flutter/lib/src/material/scrollbar_theme.dart
class ScrollbarThemeData extends Object:
	default:
		thickness: MaterialStateProperty<double?>?
		showTrackOnHover: bool?
		isAlwaysShown: bool?
		radius: Radius?
		thumbColor: MaterialStateProperty<Color?>?
		trackColor: MaterialStateProperty<Color?>?
		trackBorderColor: MaterialStateProperty<Color?>?
		crossAxisMargin: double?
		mainAxisMargin: double?
		minThumbLength: double?
		interactive: bool?

# packages/flutter/lib/src/painting/notched_shapes.dart
abstract class NotchedShape extends Object:
	default:

# packages/flutter/lib/src/material/bottom_app_bar_theme.dart
class BottomAppBarTheme extends Object:
	default:
		color: Color?
		elevation: double?
		shape: NotchedShape?

# packages/flutter/lib/src/material/dialog_theme.dart
class DialogTheme extends Object:
	default:
		backgroundColor: Color?
		elevation: double?
		shape: ShapeBorder?
		titleTextStyle: TextStyle?
		contentTextStyle: TextStyle?

# packages/flutter/lib/src/material/floating_action_button_theme.dart
class FloatingActionButtonThemeData extends Object:
	default:
		foregroundColor: Color?
		backgroundColor: Color?
		focusColor: Color?
		hoverColor: Color?
		splashColor: Color?
		elevation: double?
		focusElevation: double?
		hoverElevation: double?
		disabledElevation: double?
		highlightElevation: double?
		shape: ShapeBorder?
		enableFeedback: bool?
		sizeConstraints: BoxConstraints?
		smallSizeConstraints: BoxConstraints?
		largeSizeConstraints: BoxConstraints?
		extendedSizeConstraints: BoxConstraints?
		extendedIconLabelSpacing: double?
		extendedPadding: EdgeInsetsGeometry?
		extendedTextStyle: TextStyle?

# packages/flutter/lib/src/material/navigation_rail.dart
enum NavigationRailLabelType:
	none
	selected
	all

# packages/flutter/lib/src/material/navigation_rail_theme.dart
class NavigationRailThemeData extends Object:
	default:
		backgroundColor: Color?
		elevation: double?
		unselectedLabelTextStyle: TextStyle?
		selectedLabelTextStyle: TextStyle?
		unselectedIconTheme: IconThemeData?
		selectedIconTheme: IconThemeData?
		groupAlignment: double?
		labelType: NavigationRailLabelType?

# packages/flutter/lib/src/material/typography.dart
class Typography extends Object:
	static:
		blackMountainView: TextTheme
		whiteMountainView: TextTheme
		blackRedmond: TextTheme
		whiteRedmond: TextTheme
		blackHelsinki: TextTheme
		whiteHelsinki: TextTheme
		blackCupertino: TextTheme
		whiteCupertino: TextTheme
		blackRedwoodCity: TextTheme
		whiteRedwoodCity: TextTheme
		englishLike2014: TextTheme
		englishLike2018: TextTheme
		dense2014: TextTheme
		dense2018: TextTheme
		tall2014: TextTheme
		tall2018: TextTheme
	default:
		platform: TargetPlatform?
		black: TextTheme?
		white: TextTheme?
		englishLike: TextTheme?
		dense: TextTheme?
		tall: TextTheme?
	material2014:
		platform: TargetPlatform?
		black: TextTheme?
		white: TextTheme?
		englishLike: TextTheme?
		dense: TextTheme?
		tall: TextTheme?
	material2018:
		platform: TargetPlatform?
		black: TextTheme?
		white: TextTheme?
		englishLike: TextTheme?
		dense: TextTheme?
		tall: TextTheme?

# packages/flutter/lib/src/cupertino/text_theme.dart
class CupertinoTextThemeData extends Object:
	default:
		primaryColor: Color
		textStyle: TextStyle?
		actionTextStyle: TextStyle?
		tabLabelTextStyle: TextStyle?
		navTitleTextStyle: TextStyle?
		navLargeTitleTextStyle: TextStyle?
		navActionTextStyle: TextStyle?
		pickerTextStyle: TextStyle?
		dateTimePickerTextStyle: TextStyle?

# packages/flutter/lib/src/cupertino/theme.dart
class NoDefaultCupertinoThemeData extends Object:
	default:
		brightness: Brightness?
		primaryColor: Color?
		primaryContrastingColor: Color?
		textTheme: CupertinoTextThemeData?
		barBackgroundColor: Color?
		scaffoldBackgroundColor: Color?

# packages/flutter/lib/src/material/snack_bar_theme.dart
enum SnackBarBehavior:
	fixed
	floating

# packages/flutter/lib/src/material/snack_bar_theme.dart
class SnackBarThemeData extends Object:
	default:
		backgroundColor: Color?
		actionTextColor: Color?
		disabledActionTextColor: Color?
		contentTextStyle: TextStyle?
		elevation: double?
		shape: ShapeBorder?
		behavior: SnackBarBehavior?

# packages/flutter/lib/src/material/bottom_sheet_theme.dart
class BottomSheetThemeData extends Object:
	default:
		backgroundColor: Color?
		elevation: double?
		modalBackgroundColor: Color?
		modalElevation: double?
		shape: ShapeBorder?
		clipBehavior: Clip?
		constraints: BoxConstraints?

# packages/flutter/lib/src/material/popup_menu_theme.dart
class PopupMenuThemeData extends Object:
	default:
		color: Color?
		shape: ShapeBorder?
		elevation: double?
		textStyle: TextStyle?
		enableFeedback: bool?

# packages/flutter/lib/src/material/banner_theme.dart
class MaterialBannerThemeData extends Object:
	default:
		backgroundColor: Color?
		contentTextStyle: TextStyle?
		padding: EdgeInsetsGeometry?
		leadingPadding: EdgeInsetsGeometry?

# packages/flutter/lib/src/material/divider_theme.dart
class DividerThemeData extends Object:
	default:
		color: Color?
		space: double?
		thickness: double?
		indent: double?
		endIndent: double?

# packages/flutter/lib/src/rendering/flex.dart
enum MainAxisAlignment:
	start
	end
	center
	spaceBetween
	spaceAround
	spaceEvenly

# packages/flutter/lib/src/rendering/flex.dart
enum MainAxisSize:
	min
	max

# packages/flutter/lib/src/painting/basic_types.dart
enum VerticalDirection:
	up
	down

# packages/flutter/lib/src/material/button_bar_theme.dart
class ButtonBarThemeData extends Object:
	default:
		alignment: MainAxisAlignment?
		mainAxisSize: MainAxisSize?
		buttonTextTheme: ButtonTextTheme?
		buttonMinWidth: double?
		buttonHeight: double?
		buttonPadding: EdgeInsetsGeometry?
		buttonAlignedDropdown: bool?
		layoutBehavior: ButtonBarLayoutBehavior?
		overflowDirection: VerticalDirection?

# packages/flutter/lib/src/material/bottom_navigation_bar.dart
enum BottomNavigationBarType:
	fixed
	shifting

# packages/flutter/lib/src/material/bottom_navigation_bar.dart
enum BottomNavigationBarLandscapeLayout:
	spread
	centered
	linear

# packages/flutter/lib/src/material/bottom_navigation_bar_theme.dart
class BottomNavigationBarThemeData extends Object:
	default:
		backgroundColor: Color?
		elevation: double?
		selectedIconTheme: IconThemeData?
		unselectedIconTheme: IconThemeData?
		selectedItemColor: Color?
		unselectedItemColor: Color?
		selectedLabelStyle: TextStyle?
		unselectedLabelStyle: TextStyle?
		showSelectedLabels: bool?
		showUnselectedLabels: bool?
		type: BottomNavigationBarType?
		enableFeedback: bool?
		landscapeLayout: BottomNavigationBarLandscapeLayout?

# packages/flutter/lib/src/material/time_picker_theme.dart
class TimePickerThemeData extends Object:
	default:
		backgroundColor: Color?
		hourMinuteTextColor: Color?
		hourMinuteColor: Color?
		dayPeriodTextColor: Color?
		dayPeriodColor: Color?
		dialHandColor: Color?
		dialBackgroundColor: Color?
		dialTextColor: Color?
		entryModeIconColor: Color?
		hourMinuteTextStyle: TextStyle?
		dayPeriodTextStyle: TextStyle?
		helpTextStyle: TextStyle?
		shape: ShapeBorder?
		hourMinuteShape: ShapeBorder?
		dayPeriodShape: OutlinedBorder?
		dayPeriodBorderSide: BorderSide?
		inputDecorationTheme: InputDecorationTheme?

# packages/flutter/lib/src/services/mouse_cursor.dart
abstract class MouseCursor extends Object:
	static:
		defer: MouseCursor
		uncontrolled: MouseCursor
	default:

# packages/flutter/lib/src/painting/alignment.dart
abstract class AlignmentGeometry extends Object:
	default:

# packages/flutter/lib/src/material/button_style.dart
class ButtonStyle extends Object:
	default:
		textStyle: MaterialStateProperty<TextStyle?>?
		backgroundColor: MaterialStateProperty<Color?>?
		foregroundColor: MaterialStateProperty<Color?>?
		overlayColor: MaterialStateProperty<Color?>?
		shadowColor: MaterialStateProperty<Color?>?
		elevation: MaterialStateProperty<double?>?
		padding: MaterialStateProperty<EdgeInsetsGeometry?>?
		minimumSize: MaterialStateProperty<Size?>?
		fixedSize: MaterialStateProperty<Size?>?
		maximumSize: MaterialStateProperty<Size?>?
		side: MaterialStateProperty<BorderSide?>?
		shape: MaterialStateProperty<OutlinedBorder?>?
		mouseCursor: MaterialStateProperty<MouseCursor?>?
		visualDensity: VisualDensity?
		tapTargetSize: MaterialTapTargetSize?
		animationDuration: Duration?
		enableFeedback: bool?
		alignment: AlignmentGeometry?
		splashFactory: InteractiveInkFeatureFactory?

# packages/flutter/lib/src/material/text_button_theme.dart
class TextButtonThemeData extends Object:
	default:
		style: ButtonStyle?

# packages/flutter/lib/src/material/elevated_button_theme.dart
class ElevatedButtonThemeData extends Object:
	default:
		style: ButtonStyle?

# packages/flutter/lib/src/material/outlined_button_theme.dart
class OutlinedButtonThemeData extends Object:
	default:
		style: ButtonStyle?

# packages/flutter/lib/src/material/text_selection_theme.dart
class TextSelectionThemeData extends Object:
	default:
		cursorColor: Color?
		selectionColor: Color?
		selectionHandleColor: Color?

# packages/flutter/lib/src/material/data_table_theme.dart
class DataTableThemeData extends Object:
	default:
		decoration: Decoration?
		dataRowColor: MaterialStateProperty<Color?>?
		dataRowHeight: double?
		dataTextStyle: TextStyle?
		headingRowColor: MaterialStateProperty<Color?>?
		headingRowHeight: double?
		headingTextStyle: TextStyle?
		horizontalMargin: double?
		columnSpacing: double?
		dividerThickness: double?
		checkboxHorizontalMargin: double?

# packages/flutter/lib/src/material/checkbox_theme.dart
class CheckboxThemeData extends Object:
	default:
		mouseCursor: MaterialStateProperty<MouseCursor?>?
		fillColor: MaterialStateProperty<Color?>?
		checkColor: MaterialStateProperty<Color?>?
		overlayColor: MaterialStateProperty<Color?>?
		splashRadius: double?
		materialTapTargetSize: MaterialTapTargetSize?
		visualDensity: VisualDensity?
		shape: OutlinedBorder?
		side: BorderSide?

# packages/flutter/lib/src/material/radio_theme.dart
class RadioThemeData extends Object:
	default:
		mouseCursor: MaterialStateProperty<MouseCursor?>?
		fillColor: MaterialStateProperty<Color?>?
		overlayColor: MaterialStateProperty<Color?>?
		splashRadius: double?
		materialTapTargetSize: MaterialTapTargetSize?
		visualDensity: VisualDensity?

# packages/flutter/lib/src/material/switch_theme.dart
class SwitchThemeData extends Object:
	default:
		thumbColor: MaterialStateProperty<Color?>?
		trackColor: MaterialStateProperty<Color?>?
		materialTapTargetSize: MaterialTapTargetSize?
		mouseCursor: MaterialStateProperty<MouseCursor?>?
		overlayColor: MaterialStateProperty<Color?>?
		splashRadius: double?

# packages/flutter/lib/src/material/progress_indicator_theme.dart
class ProgressIndicatorThemeData extends Object:
	default:
		color: Color?
		linearTrackColor: Color?
		linearMinHeight: double?
		circularTrackColor: Color?
		refreshBackgroundColor: Color?

# packages/flutter/lib/src/material/theme_data.dart
class ThemeData extends Object:
	default:
		brightness: Brightness?
		visualDensity: VisualDensity?
		primarySwatch: MaterialColor?
		primaryColor: Color?
		primaryColorBrightness: Brightness?
		primaryColorLight: Color?
		primaryColorDark: Color?
		accentColor: Color?
		accentColorBrightness: Brightness?
		canvasColor: Color?
		shadowColor: Color?
		scaffoldBackgroundColor: Color?
		bottomAppBarColor: Color?
		cardColor: Color?
		dividerColor: Color?
		focusColor: Color?
		hoverColor: Color?
		highlightColor: Color?
		splashColor: Color?
		splashFactory: InteractiveInkFeatureFactory?
		selectedRowColor: Color?
		unselectedWidgetColor: Color?
		disabledColor: Color?
		buttonColor: Color?
		buttonTheme: ButtonThemeData?
		toggleButtonsTheme: ToggleButtonsThemeData?
		secondaryHeaderColor: Color?
		textSelectionColor: Color?
		cursorColor: Color?
		textSelectionHandleColor: Color?
		backgroundColor: Color?
		dialogBackgroundColor: Color?
		indicatorColor: Color?
		hintColor: Color?
		errorColor: Color?
		toggleableActiveColor: Color?
		fontFamily: String?
		textTheme: TextTheme?
		primaryTextTheme: TextTheme?
		accentTextTheme: TextTheme?
		inputDecorationTheme: InputDecorationTheme?
		iconTheme: IconThemeData?
		primaryIconTheme: IconThemeData?
		accentIconTheme: IconThemeData?
		sliderTheme: SliderThemeData?
		tabBarTheme: TabBarTheme?
		tooltipTheme: TooltipThemeData?
		cardTheme: CardTheme?
		chipTheme: ChipThemeData?
		platform: TargetPlatform?
		materialTapTargetSize: MaterialTapTargetSize?
		applyElevationOverlayColor: bool?
		pageTransitionsTheme: PageTransitionsTheme?
		appBarTheme: AppBarTheme?
		scrollbarTheme: ScrollbarThemeData?
		bottomAppBarTheme: BottomAppBarTheme?
		colorScheme: ColorScheme?
		dialogTheme: DialogTheme?
		floatingActionButtonTheme: FloatingActionButtonThemeData?
		navigationRailTheme: NavigationRailThemeData?
		typography: Typography?
		cupertinoOverrideTheme: NoDefaultCupertinoThemeData?
		snackBarTheme: SnackBarThemeData?
		bottomSheetTheme: BottomSheetThemeData?
		popupMenuTheme: PopupMenuThemeData?
		bannerTheme: MaterialBannerThemeData?
		dividerTheme: DividerThemeData?
		buttonBarTheme: ButtonBarThemeData?
		bottomNavigationBarTheme: BottomNavigationBarThemeData?
		timePickerTheme: TimePickerThemeData?
		textButtonTheme: TextButtonThemeData?
		elevatedButtonTheme: ElevatedButtonThemeData?
		outlinedButtonTheme: OutlinedButtonThemeData?
		textSelectionTheme: TextSelectionThemeData?
		dataTableTheme: DataTableThemeData?
		checkboxTheme: CheckboxThemeData?
		radioTheme: RadioThemeData?
		switchTheme: SwitchThemeData?
		progressIndicatorTheme: ProgressIndicatorThemeData?
		fixTextFieldOutlineLabel: bool?
		useTextSelectionTheme: bool?
	raw:
		visualDensity: VisualDensity
		primaryColor: Color
		primaryColorBrightness: Brightness
		primaryColorLight: Color
		primaryColorDark: Color
		canvasColor: Color
		shadowColor: Color
		accentColor: Color
		accentColorBrightness: Brightness
		scaffoldBackgroundColor: Color
		bottomAppBarColor: Color
		cardColor: Color
		dividerColor: Color
		focusColor: Color
		hoverColor: Color
		highlightColor: Color
		splashColor: Color
		splashFactory: InteractiveInkFeatureFactory
		selectedRowColor: Color
		unselectedWidgetColor: Color
		disabledColor: Color
		buttonTheme: ButtonThemeData
		buttonColor: Color
		toggleButtonsTheme: ToggleButtonsThemeData
		secondaryHeaderColor: Color
		textSelectionColor: Color
		cursorColor: Color
		textSelectionHandleColor: Color
		backgroundColor: Color
		dialogBackgroundColor: Color
		indicatorColor: Color
		hintColor: Color
		errorColor: Color
		toggleableActiveColor: Color
		textTheme: TextTheme
		primaryTextTheme: TextTheme
		accentTextTheme: TextTheme
		inputDecorationTheme: InputDecorationTheme
		iconTheme: IconThemeData
		primaryIconTheme: IconThemeData
		accentIconTheme: IconThemeData
		sliderTheme: SliderThemeData
		tabBarTheme: TabBarTheme
		tooltipTheme: TooltipThemeData
		cardTheme: CardTheme
		chipTheme: ChipThemeData
		platform: TargetPlatform
		materialTapTargetSize: MaterialTapTargetSize
		applyElevationOverlayColor: bool
		pageTransitionsTheme: PageTransitionsTheme
		appBarTheme: AppBarTheme
		scrollbarTheme: ScrollbarThemeData
		bottomAppBarTheme: BottomAppBarTheme
		colorScheme: ColorScheme
		dialogTheme: DialogTheme
		floatingActionButtonTheme: FloatingActionButtonThemeData
		navigationRailTheme: NavigationRailThemeData
		typography: Typography
		cupertinoOverrideTheme: NoDefaultCupertinoThemeData?
		snackBarTheme: SnackBarThemeData
		bottomSheetTheme: BottomSheetThemeData
		popupMenuTheme: PopupMenuThemeData
		bannerTheme: MaterialBannerThemeData
		dividerTheme: DividerThemeData
		buttonBarTheme: ButtonBarThemeData
		bottomNavigationBarTheme: BottomNavigationBarThemeData
		timePickerTheme: TimePickerThemeData
		textButtonTheme: TextButtonThemeData
		elevatedButtonTheme: ElevatedButtonThemeData
		outlinedButtonTheme: OutlinedButtonThemeData
		textSelectionTheme: TextSelectionThemeData
		dataTableTheme: DataTableThemeData
		checkboxTheme: CheckboxThemeData
		radioTheme: RadioThemeData
		switchTheme: SwitchThemeData
		progressIndicatorTheme: ProgressIndicatorThemeData
		fixTextFieldOutlineLabel: bool
		useTextSelectionTheme: bool
	from:
		colorScheme: ColorScheme
		textTheme: TextTheme?
	light:
	dark:
	fallback:

# packages/flutter/lib/src/material/app.dart
enum ThemeMode:
	system
	light
	dark

# packages/flutter/lib/src/widgets/localizations.dart
abstract class LocalizationsDelegate<T> extends Object:
	default:

# packages/flutter/lib/src/widgets/shortcuts.dart
abstract class ShortcutActivator extends Object:
	default:

# packages/flutter/lib/src/widgets/actions.dart
class DoNothingIntent extends Intent:
	default:

# packages/flutter/lib/src/widgets/actions.dart
abstract class Intent extends Object:
	static:
		doNothing: DoNothingIntent
	default:

# bin/cache/pkg/sky_engine/lib/core/type.dart
abstract class Type extends Object:
	default:

# packages/flutter/lib/src/widgets/actions.dart
abstract class Action<T extends Intent> extends Object:
	default:

# packages/flutter/lib/src/widgets/scroll_configuration.dart
class ScrollBehavior extends Object:
	default:

# packages/flutter/lib/src/foundation/change_notifier.dart
abstract class Listenable extends Object:
	default:
	merge:
		listenables: List<Listenable?>

# packages/flutter/lib/src/foundation/change_notifier.dart
abstract class ValueListenable<T> extends Listenable:
	default:

# packages/flutter/lib/src/widgets/router.dart
class RouteInformation extends Object:
	default:
		location: String?
		state: Object?

# packages/flutter/lib/src/widgets/router.dart
abstract class RouteInformationProvider extends ValueListenable<RouteInformation>:
	default:

# packages/flutter/lib/src/widgets/router.dart
abstract class RouteInformationParser<T> extends Object:
	default:

# packages/flutter/lib/src/widgets/router.dart
abstract class RouterDelegate<T> extends Listenable:
	default:

# packages/flutter/lib/src/widgets/router.dart
class _CallbackHookProvider<T> extends Object:
	default:

# bin/cache/pkg/sky_engine/lib/async/future.dart
abstract class FutureOr<T> extends Object:

# bin/cache/pkg/sky_engine/lib/core/stacktrace.dart
class _StringStackTrace extends Object implements StackTrace:
	default:
		_stackTrace: String

# bin/cache/pkg/sky_engine/lib/core/stacktrace.dart
abstract class StackTrace extends Object:
	static:
		empty: _StringStackTrace
	default:
	fromString:
		stackTraceString: String

# bin/cache/pkg/sky_engine/lib/async/future.dart
abstract class Future<T> extends Object:
	default:
		computation: FutureOr<T> Function()
	microtask:
		computation: FutureOr<T> Function()
	sync:
		computation: FutureOr<T> Function()
	value:
		value: FutureOr<T>?
	error:
		error: Object
		stackTrace: StackTrace?
	delayed:
		duration: Duration
		computation: FutureOr<T> Function()?

# packages/flutter/lib/src/widgets/router.dart
abstract class BackButtonDispatcher extends _CallbackHookProvider<Future<bool>>:
	default:

# packages/flutter/lib/src/material/app.dart
class MaterialApp extends StatefulWidget:
	default:
		key: Key?
		navigatorKey: GlobalKey<NavigatorState>?
		scaffoldMessengerKey: GlobalKey<ScaffoldMessengerState>?
		home: Widget?
		routes: Map<String, Widget Function(BuildContext)> = <String, Widget Function(BuildContext)>{}
		initialRoute: String?
		onGenerateRoute: Route<dynamic>? Function(RouteSettings)?
		onGenerateInitialRoutes: List<Route<dynamic>> Function(String)?
		onUnknownRoute: Route<dynamic>? Function(RouteSettings)?
		navigatorObservers: List<NavigatorObserver> = <NavigatorObserver>[]
		builder: Widget Function(BuildContext, Widget?)?
		title: String = ''
		onGenerateTitle: String Function(BuildContext)?
		color: Color?
		theme: ThemeData?
		darkTheme: ThemeData?
		highContrastTheme: ThemeData?
		highContrastDarkTheme: ThemeData?
		themeMode: ThemeMode?
		locale: Locale?
		localizationsDelegates: Iterable<LocalizationsDelegate<dynamic>>?
		localeListResolutionCallback: Locale? Function(List<Locale>?, Iterable<Locale>)?
		localeResolutionCallback: Locale? Function(Locale?, Iterable<Locale>)?
		supportedLocales: Iterable<Locale>
		debugShowMaterialGrid: bool = false
		showPerformanceOverlay: bool = false
		checkerboardRasterCacheImages: bool = false
		checkerboardOffscreenLayers: bool = false
		showSemanticsDebugger: bool = false
		debugShowCheckedModeBanner: bool = true
		shortcuts: Map<ShortcutActivator, Intent>?
		actions: Map<Type, Action<Intent>>?
		restorationScopeId: String?
		scrollBehavior: ScrollBehavior?
		useInheritedMediaQuery: bool = false
	router:
		key: Key?
		scaffoldMessengerKey: GlobalKey<ScaffoldMessengerState>?
		routeInformationProvider: RouteInformationProvider?
		routeInformationParser: RouteInformationParser<Object>
		routerDelegate: RouterDelegate<Object>
		backButtonDispatcher: BackButtonDispatcher?
		builder: Widget Function(BuildContext, Widget?)?
		title: String = ''
		onGenerateTitle: String Function(BuildContext)?
		color: Color?
		theme: ThemeData?
		darkTheme: ThemeData?
		highContrastTheme: ThemeData?
		highContrastDarkTheme: ThemeData?
		themeMode: ThemeMode?
		locale: Locale?
		localizationsDelegates: Iterable<LocalizationsDelegate<dynamic>>?
		localeListResolutionCallback: Locale? Function(List<Locale>?, Iterable<Locale>)?
		localeResolutionCallback: Locale? Function(Locale?, Iterable<Locale>)?
		supportedLocales: Iterable<Locale>
		debugShowMaterialGrid: bool = false
		showPerformanceOverlay: bool = false
		checkerboardRasterCacheImages: bool = false
		checkerboardOffscreenLayers: bool = false
		showSemanticsDebugger: bool = false
		debugShowCheckedModeBanner: bool = true
		shortcuts: Map<ShortcutActivator, Intent>?
		actions: Map<Type, Action<Intent>>?
		restorationScopeId: String?
		scrollBehavior: ScrollBehavior?
		useInheritedMediaQuery: bool = false

# packages/flutter/lib/src/services/raw_keyboard.dart
abstract class RawKeyEventData extends Object:
	default:

# packages/flutter/lib/src/services/raw_keyboard.dart
abstract class RawKeyEvent extends Object:
	default:
		data: RawKeyEventData
		character: String?
	fromMessage:
		message: Map<String, dynamic>

# packages/flutter/lib/src/widgets/focus_manager.dart
enum KeyEventResult:
	handled
	ignored
	skipRemainingHandlers

# packages/flutter/lib/src/services/keyboard_key.dart
abstract class KeyboardKey extends Object:
	default:

# packages/flutter/lib/src/services/keyboard_key.dart
class PhysicalKeyboardKey extends KeyboardKey:
	static:
		hyper: PhysicalKeyboardKey
		superKey: PhysicalKeyboardKey
		fn: PhysicalKeyboardKey
		fnLock: PhysicalKeyboardKey
		suspend: PhysicalKeyboardKey
		resume: PhysicalKeyboardKey
		turbo: PhysicalKeyboardKey
		privacyScreenToggle: PhysicalKeyboardKey
		sleep: PhysicalKeyboardKey
		wakeUp: PhysicalKeyboardKey
		displayToggleIntExt: PhysicalKeyboardKey
		gameButton1: PhysicalKeyboardKey
		gameButton2: PhysicalKeyboardKey
		gameButton3: PhysicalKeyboardKey
		gameButton4: PhysicalKeyboardKey
		gameButton5: PhysicalKeyboardKey
		gameButton6: PhysicalKeyboardKey
		gameButton7: PhysicalKeyboardKey
		gameButton8: PhysicalKeyboardKey
		gameButton9: PhysicalKeyboardKey
		gameButton10: PhysicalKeyboardKey
		gameButton11: PhysicalKeyboardKey
		gameButton12: PhysicalKeyboardKey
		gameButton13: PhysicalKeyboardKey
		gameButton14: PhysicalKeyboardKey
		gameButton15: PhysicalKeyboardKey
		gameButton16: PhysicalKeyboardKey
		gameButtonA: PhysicalKeyboardKey
		gameButtonB: PhysicalKeyboardKey
		gameButtonC: PhysicalKeyboardKey
		gameButtonLeft1: PhysicalKeyboardKey
		gameButtonLeft2: PhysicalKeyboardKey
		gameButtonMode: PhysicalKeyboardKey
		gameButtonRight1: PhysicalKeyboardKey
		gameButtonRight2: PhysicalKeyboardKey
		gameButtonSelect: PhysicalKeyboardKey
		gameButtonStart: PhysicalKeyboardKey
		gameButtonThumbLeft: PhysicalKeyboardKey
		gameButtonThumbRight: PhysicalKeyboardKey
		gameButtonX: PhysicalKeyboardKey
		gameButtonY: PhysicalKeyboardKey
		gameButtonZ: PhysicalKeyboardKey
		usbReserved: PhysicalKeyboardKey
		usbErrorRollOver: PhysicalKeyboardKey
		usbPostFail: PhysicalKeyboardKey
		usbErrorUndefined: PhysicalKeyboardKey
		keyA: PhysicalKeyboardKey
		keyB: PhysicalKeyboardKey
		keyC: PhysicalKeyboardKey
		keyD: PhysicalKeyboardKey
		keyE: PhysicalKeyboardKey
		keyF: PhysicalKeyboardKey
		keyG: PhysicalKeyboardKey
		keyH: PhysicalKeyboardKey
		keyI: PhysicalKeyboardKey
		keyJ: PhysicalKeyboardKey
		keyK: PhysicalKeyboardKey
		keyL: PhysicalKeyboardKey
		keyM: PhysicalKeyboardKey
		keyN: PhysicalKeyboardKey
		keyO: PhysicalKeyboardKey
		keyP: PhysicalKeyboardKey
		keyQ: PhysicalKeyboardKey
		keyR: PhysicalKeyboardKey
		keyS: PhysicalKeyboardKey
		keyT: PhysicalKeyboardKey
		keyU: PhysicalKeyboardKey
		keyV: PhysicalKeyboardKey
		keyW: PhysicalKeyboardKey
		keyX: PhysicalKeyboardKey
		keyY: PhysicalKeyboardKey
		keyZ: PhysicalKeyboardKey
		digit1: PhysicalKeyboardKey
		digit2: PhysicalKeyboardKey
		digit3: PhysicalKeyboardKey
		digit4: PhysicalKeyboardKey
		digit5: PhysicalKeyboardKey
		digit6: PhysicalKeyboardKey
		digit7: PhysicalKeyboardKey
		digit8: PhysicalKeyboardKey
		digit9: PhysicalKeyboardKey
		digit0: PhysicalKeyboardKey
		enter: PhysicalKeyboardKey
		escape: PhysicalKeyboardKey
		backspace: PhysicalKeyboardKey
		tab: PhysicalKeyboardKey
		space: PhysicalKeyboardKey
		minus: PhysicalKeyboardKey
		equal: PhysicalKeyboardKey
		bracketLeft: PhysicalKeyboardKey
		bracketRight: PhysicalKeyboardKey
		backslash: PhysicalKeyboardKey
		semicolon: PhysicalKeyboardKey
		quote: PhysicalKeyboardKey
		backquote: PhysicalKeyboardKey
		comma: PhysicalKeyboardKey
		period: PhysicalKeyboardKey
		slash: PhysicalKeyboardKey
		capsLock: PhysicalKeyboardKey
		f1: PhysicalKeyboardKey
		f2: PhysicalKeyboardKey
		f3: PhysicalKeyboardKey
		f4: PhysicalKeyboardKey
		f5: PhysicalKeyboardKey
		f6: PhysicalKeyboardKey
		f7: PhysicalKeyboardKey
		f8: PhysicalKeyboardKey
		f9: PhysicalKeyboardKey
		f10: PhysicalKeyboardKey
		f11: PhysicalKeyboardKey
		f12: PhysicalKeyboardKey
		printScreen: PhysicalKeyboardKey
		scrollLock: PhysicalKeyboardKey
		pause: PhysicalKeyboardKey
		insert: PhysicalKeyboardKey
		home: PhysicalKeyboardKey
		pageUp: PhysicalKeyboardKey
		delete: PhysicalKeyboardKey
		end: PhysicalKeyboardKey
		pageDown: PhysicalKeyboardKey
		arrowRight: PhysicalKeyboardKey
		arrowLeft: PhysicalKeyboardKey
		arrowDown: PhysicalKeyboardKey
		arrowUp: PhysicalKeyboardKey
		numLock: PhysicalKeyboardKey
		numpadDivide: PhysicalKeyboardKey
		numpadMultiply: PhysicalKeyboardKey
		numpadSubtract: PhysicalKeyboardKey
		numpadAdd: PhysicalKeyboardKey
		numpadEnter: PhysicalKeyboardKey
		numpad1: PhysicalKeyboardKey
		numpad2: PhysicalKeyboardKey
		numpad3: PhysicalKeyboardKey
		numpad4: PhysicalKeyboardKey
		numpad5: PhysicalKeyboardKey
		numpad6: PhysicalKeyboardKey
		numpad7: PhysicalKeyboardKey
		numpad8: PhysicalKeyboardKey
		numpad9: PhysicalKeyboardKey
		numpad0: PhysicalKeyboardKey
		numpadDecimal: PhysicalKeyboardKey
		intlBackslash: PhysicalKeyboardKey
		contextMenu: PhysicalKeyboardKey
		power: PhysicalKeyboardKey
		numpadEqual: PhysicalKeyboardKey
		f13: PhysicalKeyboardKey
		f14: PhysicalKeyboardKey
		f15: PhysicalKeyboardKey
		f16: PhysicalKeyboardKey
		f17: PhysicalKeyboardKey
		f18: PhysicalKeyboardKey
		f19: PhysicalKeyboardKey
		f20: PhysicalKeyboardKey
		f21: PhysicalKeyboardKey
		f22: PhysicalKeyboardKey
		f23: PhysicalKeyboardKey
		f24: PhysicalKeyboardKey
		open: PhysicalKeyboardKey
		help: PhysicalKeyboardKey
		select: PhysicalKeyboardKey
		again: PhysicalKeyboardKey
		undo: PhysicalKeyboardKey
		cut: PhysicalKeyboardKey
		copy: PhysicalKeyboardKey
		paste: PhysicalKeyboardKey
		find: PhysicalKeyboardKey
		audioVolumeMute: PhysicalKeyboardKey
		audioVolumeUp: PhysicalKeyboardKey
		audioVolumeDown: PhysicalKeyboardKey
		numpadComma: PhysicalKeyboardKey
		intlRo: PhysicalKeyboardKey
		kanaMode: PhysicalKeyboardKey
		intlYen: PhysicalKeyboardKey
		convert: PhysicalKeyboardKey
		nonConvert: PhysicalKeyboardKey
		lang1: PhysicalKeyboardKey
		lang2: PhysicalKeyboardKey
		lang3: PhysicalKeyboardKey
		lang4: PhysicalKeyboardKey
		lang5: PhysicalKeyboardKey
		abort: PhysicalKeyboardKey
		props: PhysicalKeyboardKey
		numpadParenLeft: PhysicalKeyboardKey
		numpadParenRight: PhysicalKeyboardKey
		numpadBackspace: PhysicalKeyboardKey
		numpadMemoryStore: PhysicalKeyboardKey
		numpadMemoryRecall: PhysicalKeyboardKey
		numpadMemoryClear: PhysicalKeyboardKey
		numpadMemoryAdd: PhysicalKeyboardKey
		numpadMemorySubtract: PhysicalKeyboardKey
		numpadSignChange: PhysicalKeyboardKey
		numpadClear: PhysicalKeyboardKey
		numpadClearEntry: PhysicalKeyboardKey
		controlLeft: PhysicalKeyboardKey
		shiftLeft: PhysicalKeyboardKey
		altLeft: PhysicalKeyboardKey
		metaLeft: PhysicalKeyboardKey
		controlRight: PhysicalKeyboardKey
		shiftRight: PhysicalKeyboardKey
		altRight: PhysicalKeyboardKey
		metaRight: PhysicalKeyboardKey
		info: PhysicalKeyboardKey
		closedCaptionToggle: PhysicalKeyboardKey
		brightnessUp: PhysicalKeyboardKey
		brightnessDown: PhysicalKeyboardKey
		brightnessToggle: PhysicalKeyboardKey
		brightnessMinimum: PhysicalKeyboardKey
		brightnessMaximum: PhysicalKeyboardKey
		brightnessAuto: PhysicalKeyboardKey
		kbdIllumUp: PhysicalKeyboardKey
		kbdIllumDown: PhysicalKeyboardKey
		mediaLast: PhysicalKeyboardKey
		launchPhone: PhysicalKeyboardKey
		programGuide: PhysicalKeyboardKey
		exit: PhysicalKeyboardKey
		channelUp: PhysicalKeyboardKey
		channelDown: PhysicalKeyboardKey
		mediaPlay: PhysicalKeyboardKey
		mediaPause: PhysicalKeyboardKey
		mediaRecord: PhysicalKeyboardKey
		mediaFastForward: PhysicalKeyboardKey
		mediaRewind: PhysicalKeyboardKey
		mediaTrackNext: PhysicalKeyboardKey
		mediaTrackPrevious: PhysicalKeyboardKey
		mediaStop: PhysicalKeyboardKey
		eject: PhysicalKeyboardKey
		mediaPlayPause: PhysicalKeyboardKey
		speechInputToggle: PhysicalKeyboardKey
		bassBoost: PhysicalKeyboardKey
		mediaSelect: PhysicalKeyboardKey
		launchWordProcessor: PhysicalKeyboardKey
		launchSpreadsheet: PhysicalKeyboardKey
		launchMail: PhysicalKeyboardKey
		launchContacts: PhysicalKeyboardKey
		launchCalendar: PhysicalKeyboardKey
		launchApp2: PhysicalKeyboardKey
		launchApp1: PhysicalKeyboardKey
		launchInternetBrowser: PhysicalKeyboardKey
		logOff: PhysicalKeyboardKey
		lockScreen: PhysicalKeyboardKey
		launchControlPanel: PhysicalKeyboardKey
		selectTask: PhysicalKeyboardKey
		launchDocuments: PhysicalKeyboardKey
		spellCheck: PhysicalKeyboardKey
		launchKeyboardLayout: PhysicalKeyboardKey
		launchScreenSaver: PhysicalKeyboardKey
		launchAudioBrowser: PhysicalKeyboardKey
		launchAssistant: PhysicalKeyboardKey
		newKey: PhysicalKeyboardKey
		close: PhysicalKeyboardKey
		save: PhysicalKeyboardKey
		print: PhysicalKeyboardKey
		browserSearch: PhysicalKeyboardKey
		browserHome: PhysicalKeyboardKey
		browserBack: PhysicalKeyboardKey
		browserForward: PhysicalKeyboardKey
		browserStop: PhysicalKeyboardKey
		browserRefresh: PhysicalKeyboardKey
		browserFavorites: PhysicalKeyboardKey
		zoomIn: PhysicalKeyboardKey
		zoomOut: PhysicalKeyboardKey
		zoomToggle: PhysicalKeyboardKey
		redo: PhysicalKeyboardKey
		mailReply: PhysicalKeyboardKey
		mailForward: PhysicalKeyboardKey
		mailSend: PhysicalKeyboardKey
		keyboardLayoutSelect: PhysicalKeyboardKey
		showAllWindows: PhysicalKeyboardKey
	default:
		usbHidUsage: int

# packages/flutter/lib/src/services/keyboard_key.dart
class LogicalKeyboardKey extends KeyboardKey:
	static:
		valueMask: int = 4294967295
		planeMask: int = 1095216660480
		unicodePlane: int = 0
		unprintablePlane: int = 4294967296
		flutterPlane: int = 8589934592
		startOfPlatformPlanes: int = 73014444032
		androidPlane: int = 73014444032
		fuchsiaPlane: int = 77309411328
		iosPlane: int = 81604378624
		macosPlane: int = 85899345920
		gtkPlane: int = 90194313216
		windowsPlane: int = 94489280512
		webPlane: int = 98784247808
		glfwPlane: int = 103079215104
		space: LogicalKeyboardKey
		exclamation: LogicalKeyboardKey
		quote: LogicalKeyboardKey
		numberSign: LogicalKeyboardKey
		dollar: LogicalKeyboardKey
		percent: LogicalKeyboardKey
		ampersand: LogicalKeyboardKey
		quoteSingle: LogicalKeyboardKey
		parenthesisLeft: LogicalKeyboardKey
		parenthesisRight: LogicalKeyboardKey
		asterisk: LogicalKeyboardKey
		add: LogicalKeyboardKey
		comma: LogicalKeyboardKey
		minus: LogicalKeyboardKey
		period: LogicalKeyboardKey
		slash: LogicalKeyboardKey
		digit0: LogicalKeyboardKey
		digit1: LogicalKeyboardKey
		digit2: LogicalKeyboardKey
		digit3: LogicalKeyboardKey
		digit4: LogicalKeyboardKey
		digit5: LogicalKeyboardKey
		digit6: LogicalKeyboardKey
		digit7: LogicalKeyboardKey
		digit8: LogicalKeyboardKey
		digit9: LogicalKeyboardKey
		colon: LogicalKeyboardKey
		semicolon: LogicalKeyboardKey
		less: LogicalKeyboardKey
		equal: LogicalKeyboardKey
		greater: LogicalKeyboardKey
		question: LogicalKeyboardKey
		at: LogicalKeyboardKey
		bracketLeft: LogicalKeyboardKey
		backslash: LogicalKeyboardKey
		bracketRight: LogicalKeyboardKey
		caret: LogicalKeyboardKey
		underscore: LogicalKeyboardKey
		backquote: LogicalKeyboardKey
		keyA: LogicalKeyboardKey
		keyB: LogicalKeyboardKey
		keyC: LogicalKeyboardKey
		keyD: LogicalKeyboardKey
		keyE: LogicalKeyboardKey
		keyF: LogicalKeyboardKey
		keyG: LogicalKeyboardKey
		keyH: LogicalKeyboardKey
		keyI: LogicalKeyboardKey
		keyJ: LogicalKeyboardKey
		keyK: LogicalKeyboardKey
		keyL: LogicalKeyboardKey
		keyM: LogicalKeyboardKey
		keyN: LogicalKeyboardKey
		keyO: LogicalKeyboardKey
		keyP: LogicalKeyboardKey
		keyQ: LogicalKeyboardKey
		keyR: LogicalKeyboardKey
		keyS: LogicalKeyboardKey
		keyT: LogicalKeyboardKey
		keyU: LogicalKeyboardKey
		keyV: LogicalKeyboardKey
		keyW: LogicalKeyboardKey
		keyX: LogicalKeyboardKey
		keyY: LogicalKeyboardKey
		keyZ: LogicalKeyboardKey
		braceLeft: LogicalKeyboardKey
		bar: LogicalKeyboardKey
		braceRight: LogicalKeyboardKey
		tilde: LogicalKeyboardKey
		unidentified: LogicalKeyboardKey
		backspace: LogicalKeyboardKey
		tab: LogicalKeyboardKey
		enter: LogicalKeyboardKey
		escape: LogicalKeyboardKey
		delete: LogicalKeyboardKey
		accel: LogicalKeyboardKey
		altGraph: LogicalKeyboardKey
		capsLock: LogicalKeyboardKey
		fn: LogicalKeyboardKey
		fnLock: LogicalKeyboardKey
		hyper: LogicalKeyboardKey
		numLock: LogicalKeyboardKey
		scrollLock: LogicalKeyboardKey
		superKey: LogicalKeyboardKey
		symbol: LogicalKeyboardKey
		symbolLock: LogicalKeyboardKey
		shiftLevel5: LogicalKeyboardKey
		arrowDown: LogicalKeyboardKey
		arrowLeft: LogicalKeyboardKey
		arrowRight: LogicalKeyboardKey
		arrowUp: LogicalKeyboardKey
		end: LogicalKeyboardKey
		home: LogicalKeyboardKey
		pageDown: LogicalKeyboardKey
		pageUp: LogicalKeyboardKey
		clear: LogicalKeyboardKey
		copy: LogicalKeyboardKey
		crSel: LogicalKeyboardKey
		cut: LogicalKeyboardKey
		eraseEof: LogicalKeyboardKey
		exSel: LogicalKeyboardKey
		insert: LogicalKeyboardKey
		paste: LogicalKeyboardKey
		redo: LogicalKeyboardKey
		undo: LogicalKeyboardKey
		accept: LogicalKeyboardKey
		again: LogicalKeyboardKey
		attn: LogicalKeyboardKey
		cancel: LogicalKeyboardKey
		contextMenu: LogicalKeyboardKey
		execute: LogicalKeyboardKey
		find: LogicalKeyboardKey
		help: LogicalKeyboardKey
		pause: LogicalKeyboardKey
		play: LogicalKeyboardKey
		props: LogicalKeyboardKey
		select: LogicalKeyboardKey
		zoomIn: LogicalKeyboardKey
		zoomOut: LogicalKeyboardKey
		brightnessDown: LogicalKeyboardKey
		brightnessUp: LogicalKeyboardKey
		camera: LogicalKeyboardKey
		eject: LogicalKeyboardKey
		logOff: LogicalKeyboardKey
		power: LogicalKeyboardKey
		powerOff: LogicalKeyboardKey
		printScreen: LogicalKeyboardKey
		hibernate: LogicalKeyboardKey
		standby: LogicalKeyboardKey
		wakeUp: LogicalKeyboardKey
		allCandidates: LogicalKeyboardKey
		alphanumeric: LogicalKeyboardKey
		codeInput: LogicalKeyboardKey
		compose: LogicalKeyboardKey
		convert: LogicalKeyboardKey
		finalMode: LogicalKeyboardKey
		groupFirst: LogicalKeyboardKey
		groupLast: LogicalKeyboardKey
		groupNext: LogicalKeyboardKey
		groupPrevious: LogicalKeyboardKey
		modeChange: LogicalKeyboardKey
		nextCandidate: LogicalKeyboardKey
		nonConvert: LogicalKeyboardKey
		previousCandidate: LogicalKeyboardKey
		process: LogicalKeyboardKey
		singleCandidate: LogicalKeyboardKey
		hangulMode: LogicalKeyboardKey
		hanjaMode: LogicalKeyboardKey
		junjaMode: LogicalKeyboardKey
		eisu: LogicalKeyboardKey
		hankaku: LogicalKeyboardKey
		hiragana: LogicalKeyboardKey
		hiraganaKatakana: LogicalKeyboardKey
		kanaMode: LogicalKeyboardKey
		kanjiMode: LogicalKeyboardKey
		katakana: LogicalKeyboardKey
		romaji: LogicalKeyboardKey
		zenkaku: LogicalKeyboardKey
		zenkakuHankaku: LogicalKeyboardKey
		f1: LogicalKeyboardKey
		f2: LogicalKeyboardKey
		f3: LogicalKeyboardKey
		f4: LogicalKeyboardKey
		f5: LogicalKeyboardKey
		f6: LogicalKeyboardKey
		f7: LogicalKeyboardKey
		f8: LogicalKeyboardKey
		f9: LogicalKeyboardKey
		f10: LogicalKeyboardKey
		f11: LogicalKeyboardKey
		f12: LogicalKeyboardKey
		f13: LogicalKeyboardKey
		f14: LogicalKeyboardKey
		f15: LogicalKeyboardKey
		f16: LogicalKeyboardKey
		f17: LogicalKeyboardKey
		f18: LogicalKeyboardKey
		f19: LogicalKeyboardKey
		f20: LogicalKeyboardKey
		f21: LogicalKeyboardKey
		f22: LogicalKeyboardKey
		f23: LogicalKeyboardKey
		f24: LogicalKeyboardKey
		soft1: LogicalKeyboardKey
		soft2: LogicalKeyboardKey
		soft3: LogicalKeyboardKey
		soft4: LogicalKeyboardKey
		soft5: LogicalKeyboardKey
		soft6: LogicalKeyboardKey
		soft7: LogicalKeyboardKey
		soft8: LogicalKeyboardKey
		close: LogicalKeyboardKey
		mailForward: LogicalKeyboardKey
		mailReply: LogicalKeyboardKey
		mailSend: LogicalKeyboardKey
		mediaPlayPause: LogicalKeyboardKey
		mediaStop: LogicalKeyboardKey
		mediaTrackNext: LogicalKeyboardKey
		mediaTrackPrevious: LogicalKeyboardKey
		newKey: LogicalKeyboardKey
		open: LogicalKeyboardKey
		print: LogicalKeyboardKey
		save: LogicalKeyboardKey
		spellCheck: LogicalKeyboardKey
		audioVolumeDown: LogicalKeyboardKey
		audioVolumeUp: LogicalKeyboardKey
		audioVolumeMute: LogicalKeyboardKey
		launchApplication2: LogicalKeyboardKey
		launchCalendar: LogicalKeyboardKey
		launchMail: LogicalKeyboardKey
		launchMediaPlayer: LogicalKeyboardKey
		launchMusicPlayer: LogicalKeyboardKey
		launchApplication1: LogicalKeyboardKey
		launchScreenSaver: LogicalKeyboardKey
		launchSpreadsheet: LogicalKeyboardKey
		launchWebBrowser: LogicalKeyboardKey
		launchWebCam: LogicalKeyboardKey
		launchWordProcessor: LogicalKeyboardKey
		launchContacts: LogicalKeyboardKey
		launchPhone: LogicalKeyboardKey
		launchAssistant: LogicalKeyboardKey
		launchControlPanel: LogicalKeyboardKey
		browserBack: LogicalKeyboardKey
		browserFavorites: LogicalKeyboardKey
		browserForward: LogicalKeyboardKey
		browserHome: LogicalKeyboardKey
		browserRefresh: LogicalKeyboardKey
		browserSearch: LogicalKeyboardKey
		browserStop: LogicalKeyboardKey
		audioBalanceLeft: LogicalKeyboardKey
		audioBalanceRight: LogicalKeyboardKey
		audioBassBoostDown: LogicalKeyboardKey
		audioBassBoostUp: LogicalKeyboardKey
		audioFaderFront: LogicalKeyboardKey
		audioFaderRear: LogicalKeyboardKey
		audioSurroundModeNext: LogicalKeyboardKey
		avrInput: LogicalKeyboardKey
		avrPower: LogicalKeyboardKey
		channelDown: LogicalKeyboardKey
		channelUp: LogicalKeyboardKey
		colorF0Red: LogicalKeyboardKey
		colorF1Green: LogicalKeyboardKey
		colorF2Yellow: LogicalKeyboardKey
		colorF3Blue: LogicalKeyboardKey
		colorF4Grey: LogicalKeyboardKey
		colorF5Brown: LogicalKeyboardKey
		closedCaptionToggle: LogicalKeyboardKey
		dimmer: LogicalKeyboardKey
		displaySwap: LogicalKeyboardKey
		exit: LogicalKeyboardKey
		favoriteClear0: LogicalKeyboardKey
		favoriteClear1: LogicalKeyboardKey
		favoriteClear2: LogicalKeyboardKey
		favoriteClear3: LogicalKeyboardKey
		favoriteRecall0: LogicalKeyboardKey
		favoriteRecall1: LogicalKeyboardKey
		favoriteRecall2: LogicalKeyboardKey
		favoriteRecall3: LogicalKeyboardKey
		favoriteStore0: LogicalKeyboardKey
		favoriteStore1: LogicalKeyboardKey
		favoriteStore2: LogicalKeyboardKey
		favoriteStore3: LogicalKeyboardKey
		guide: LogicalKeyboardKey
		guideNextDay: LogicalKeyboardKey
		guidePreviousDay: LogicalKeyboardKey
		info: LogicalKeyboardKey
		instantReplay: LogicalKeyboardKey
		link: LogicalKeyboardKey
		listProgram: LogicalKeyboardKey
		liveContent: LogicalKeyboardKey
		lock: LogicalKeyboardKey
		mediaApps: LogicalKeyboardKey
		mediaFastForward: LogicalKeyboardKey
		mediaLast: LogicalKeyboardKey
		mediaPause: LogicalKeyboardKey
		mediaPlay: LogicalKeyboardKey
		mediaRecord: LogicalKeyboardKey
		mediaRewind: LogicalKeyboardKey
		mediaSkip: LogicalKeyboardKey
		nextFavoriteChannel: LogicalKeyboardKey
		nextUserProfile: LogicalKeyboardKey
		onDemand: LogicalKeyboardKey
		pInPDown: LogicalKeyboardKey
		pInPMove: LogicalKeyboardKey
		pInPToggle: LogicalKeyboardKey
		pInPUp: LogicalKeyboardKey
		playSpeedDown: LogicalKeyboardKey
		playSpeedReset: LogicalKeyboardKey
		playSpeedUp: LogicalKeyboardKey
		randomToggle: LogicalKeyboardKey
		rcLowBattery: LogicalKeyboardKey
		recordSpeedNext: LogicalKeyboardKey
		rfBypass: LogicalKeyboardKey
		scanChannelsToggle: LogicalKeyboardKey
		screenModeNext: LogicalKeyboardKey
		settings: LogicalKeyboardKey
		splitScreenToggle: LogicalKeyboardKey
		stbInput: LogicalKeyboardKey
		stbPower: LogicalKeyboardKey
		subtitle: LogicalKeyboardKey
		teletext: LogicalKeyboardKey
		tv: LogicalKeyboardKey
		tvInput: LogicalKeyboardKey
		tvPower: LogicalKeyboardKey
		videoModeNext: LogicalKeyboardKey
		wink: LogicalKeyboardKey
		zoomToggle: LogicalKeyboardKey
		dvr: LogicalKeyboardKey
		mediaAudioTrack: LogicalKeyboardKey
		mediaSkipBackward: LogicalKeyboardKey
		mediaSkipForward: LogicalKeyboardKey
		mediaStepBackward: LogicalKeyboardKey
		mediaStepForward: LogicalKeyboardKey
		mediaTopMenu: LogicalKeyboardKey
		navigateIn: LogicalKeyboardKey
		navigateNext: LogicalKeyboardKey
		navigateOut: LogicalKeyboardKey
		navigatePrevious: LogicalKeyboardKey
		pairing: LogicalKeyboardKey
		mediaClose: LogicalKeyboardKey
		audioBassBoostToggle: LogicalKeyboardKey
		audioTrebleDown: LogicalKeyboardKey
		audioTrebleUp: LogicalKeyboardKey
		microphoneToggle: LogicalKeyboardKey
		microphoneVolumeDown: LogicalKeyboardKey
		microphoneVolumeUp: LogicalKeyboardKey
		microphoneVolumeMute: LogicalKeyboardKey
		speechCorrectionList: LogicalKeyboardKey
		speechInputToggle: LogicalKeyboardKey
		appSwitch: LogicalKeyboardKey
		call: LogicalKeyboardKey
		cameraFocus: LogicalKeyboardKey
		endCall: LogicalKeyboardKey
		goBack: LogicalKeyboardKey
		goHome: LogicalKeyboardKey
		headsetHook: LogicalKeyboardKey
		lastNumberRedial: LogicalKeyboardKey
		notification: LogicalKeyboardKey
		mannerMode: LogicalKeyboardKey
		voiceDial: LogicalKeyboardKey
		tv3DMode: LogicalKeyboardKey
		tvAntennaCable: LogicalKeyboardKey
		tvAudioDescription: LogicalKeyboardKey
		tvAudioDescriptionMixDown: LogicalKeyboardKey
		tvAudioDescriptionMixUp: LogicalKeyboardKey
		tvContentsMenu: LogicalKeyboardKey
		tvDataService: LogicalKeyboardKey
		tvInputComponent1: LogicalKeyboardKey
		tvInputComponent2: LogicalKeyboardKey
		tvInputComposite1: LogicalKeyboardKey
		tvInputComposite2: LogicalKeyboardKey
		tvInputHDMI1: LogicalKeyboardKey
		tvInputHDMI2: LogicalKeyboardKey
		tvInputHDMI3: LogicalKeyboardKey
		tvInputHDMI4: LogicalKeyboardKey
		tvInputVGA1: LogicalKeyboardKey
		tvMediaContext: LogicalKeyboardKey
		tvNetwork: LogicalKeyboardKey
		tvNumberEntry: LogicalKeyboardKey
		tvRadioService: LogicalKeyboardKey
		tvSatellite: LogicalKeyboardKey
		tvSatelliteBS: LogicalKeyboardKey
		tvSatelliteCS: LogicalKeyboardKey
		tvSatelliteToggle: LogicalKeyboardKey
		tvTerrestrialAnalog: LogicalKeyboardKey
		tvTerrestrialDigital: LogicalKeyboardKey
		tvTimer: LogicalKeyboardKey
		key11: LogicalKeyboardKey
		key12: LogicalKeyboardKey
		suspend: LogicalKeyboardKey
		resume: LogicalKeyboardKey
		sleep: LogicalKeyboardKey
		abort: LogicalKeyboardKey
		lang1: LogicalKeyboardKey
		lang2: LogicalKeyboardKey
		lang3: LogicalKeyboardKey
		lang4: LogicalKeyboardKey
		lang5: LogicalKeyboardKey
		intlBackslash: LogicalKeyboardKey
		intlRo: LogicalKeyboardKey
		intlYen: LogicalKeyboardKey
		controlLeft: LogicalKeyboardKey
		controlRight: LogicalKeyboardKey
		shiftLeft: LogicalKeyboardKey
		shiftRight: LogicalKeyboardKey
		altLeft: LogicalKeyboardKey
		altRight: LogicalKeyboardKey
		metaLeft: LogicalKeyboardKey
		metaRight: LogicalKeyboardKey
		control: LogicalKeyboardKey
		shift: LogicalKeyboardKey
		alt: LogicalKeyboardKey
		meta: LogicalKeyboardKey
		numpadEnter: LogicalKeyboardKey
		numpadParenLeft: LogicalKeyboardKey
		numpadParenRight: LogicalKeyboardKey
		numpadMultiply: LogicalKeyboardKey
		numpadAdd: LogicalKeyboardKey
		numpadComma: LogicalKeyboardKey
		numpadSubtract: LogicalKeyboardKey
		numpadDecimal: LogicalKeyboardKey
		numpadDivide: LogicalKeyboardKey
		numpad0: LogicalKeyboardKey
		numpad1: LogicalKeyboardKey
		numpad2: LogicalKeyboardKey
		numpad3: LogicalKeyboardKey
		numpad4: LogicalKeyboardKey
		numpad5: LogicalKeyboardKey
		numpad6: LogicalKeyboardKey
		numpad7: LogicalKeyboardKey
		numpad8: LogicalKeyboardKey
		numpad9: LogicalKeyboardKey
		numpadEqual: LogicalKeyboardKey
		gameButton1: LogicalKeyboardKey
		gameButton2: LogicalKeyboardKey
		gameButton3: LogicalKeyboardKey
		gameButton4: LogicalKeyboardKey
		gameButton5: LogicalKeyboardKey
		gameButton6: LogicalKeyboardKey
		gameButton7: LogicalKeyboardKey
		gameButton8: LogicalKeyboardKey
		gameButton9: LogicalKeyboardKey
		gameButton10: LogicalKeyboardKey
		gameButton11: LogicalKeyboardKey
		gameButton12: LogicalKeyboardKey
		gameButton13: LogicalKeyboardKey
		gameButton14: LogicalKeyboardKey
		gameButton15: LogicalKeyboardKey
		gameButton16: LogicalKeyboardKey
		gameButtonA: LogicalKeyboardKey
		gameButtonB: LogicalKeyboardKey
		gameButtonC: LogicalKeyboardKey
		gameButtonLeft1: LogicalKeyboardKey
		gameButtonLeft2: LogicalKeyboardKey
		gameButtonMode: LogicalKeyboardKey
		gameButtonRight1: LogicalKeyboardKey
		gameButtonRight2: LogicalKeyboardKey
		gameButtonSelect: LogicalKeyboardKey
		gameButtonStart: LogicalKeyboardKey
		gameButtonThumbLeft: LogicalKeyboardKey
		gameButtonThumbRight: LogicalKeyboardKey
		gameButtonX: LogicalKeyboardKey
		gameButtonY: LogicalKeyboardKey
		gameButtonZ: LogicalKeyboardKey
	default:
		keyId: int

# packages/flutter/lib/src/services/hardware_keyboard.dart
abstract class KeyEvent extends Object:
	default:
		physicalKey: PhysicalKeyboardKey
		logicalKey: LogicalKeyboardKey
		character: String?
		timeStamp: Duration
		synthesized: bool = false

# packages/flutter/lib/src/widgets/focus_manager.dart
class FocusNode extends Object:
	default:
		debugLabel: String?
		onKey: KeyEventResult Function(FocusNode, RawKeyEvent)?
		onKeyEvent: KeyEventResult Function(FocusNode, KeyEvent)?
		skipTraversal: bool = false
		canRequestFocus: bool = true
		descendantsAreFocusable: bool = true

# packages/flutter/lib/src/material/button_style_button.dart
abstract class ButtonStyleButton extends StatefulWidget:
	default:
		key: Key?
		onPressed: void Function()?
		onLongPress: void Function()?
		style: ButtonStyle?
		focusNode: FocusNode?
		autofocus: bool
		clipBehavior: Clip
		child: Widget?

# packages/flutter/lib/src/material/elevated_button.dart
class ElevatedButton extends ButtonStyleButton:
	default:
		key: Key?
		onPressed: void Function()?
		onLongPress: void Function()?
		style: ButtonStyle?
		focusNode: FocusNode?
		autofocus: bool = false
		clipBehavior: Clip
		child: Widget?
	icon:
		key: Key?
		onPressed: void Function()?
		onLongPress: void Function()?
		style: ButtonStyle?
		focusNode: FocusNode?
		autofocus: bool?
		clipBehavior: Clip?
		icon: Widget
		label: Widget

